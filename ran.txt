const express = require('express');
const bodyParser = require('body-parser');

// Create an instance of Express app
const app = express();

// Middleware to parse JSON requests
app.use(bodyParser.json());

// Sample data - You may replace this with a database
let employees = [
    { id: 1, name: 'John Doe', age: 30, position: 'Software Engineer' },
    { id: 2, name: 'Jane Smith', age: 28, position: 'UI/UX Designer' },
];

// Routes

// Get all employees
app.get('/employees', (req, res) => {
    res.json(employees);
});

// Get employee by ID
app.get('/employees/:id', (req, res) => {
    const id = parseInt(req.params.id);
    const employee = employees.find(emp => emp.id === id);
    if (!employee) {
        res.status(404).json({ error: 'Employee not found' });
    } else {
        res.json(employee);
    }
});

// Create a new employee
app.post('/employees', (req, res) => {
    const newEmployee = req.body;
    employees.push(newEmployee);
    res.status(201).json(newEmployee);
});

// Update an existing employee
app.put('/employees/:id', (req, res) => {
    const id = parseInt(req.params.id);
    const updatedEmployee = req.body;
    let found = false;
    employees = employees.map(emp => {
        if (emp.id === id) {
            found = true;
            return { ...emp, ...updatedEmployee };
        }
        return emp;
    });
    if (found) {
        res.json(updatedEmployee);
    } else {
        res.status(404).json({ error: 'Employee not found' });
    }
});

// Delete an employee
app.delete('/employees/:id', (req, res) => {
    const id = parseInt(req.params.id);
    const index = employees.findIndex(emp => emp.id === id);
    if (index !== -1) {
        employees.splice(index, 1);
        res.status(204).send();
    } else {
        res.status(404).json({ error: 'Employee not found' });
    }
});

// Start the server
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});